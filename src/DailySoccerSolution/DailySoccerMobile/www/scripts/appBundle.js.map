{"version":3,"file":"appBundle.js","sourceRoot":"","sources":["../../scripts/app.ts","../../scripts/controllers.ts","../../scripts/accounts/starter.account.AccountController.ts","../../scripts/accounts/starter.account.models.ts","../../scripts/accounts/starter.account.services.ts","../../scripts/history/starter.history.HistoryController.ts","../../scripts/history/starter.history.Models.ts","../../scripts/history/starter.history.services.ts","../../scripts/matches/starter.match.MatchController.ts","../../scripts/matches/starter.match.Models.ts","../../scripts/matches/starter.match.services.ts","../../scripts/rewards/starter.reward.Models.ts","../../scripts/rewards/starter.reward.RewardController.ts","../../scripts/rewards/starter.reward.services.ts","../../scripts/shared/starter.shared.modules.ts","../../scripts/shared/starter.shared.services.ts"],"names":["starter","starter.account","starter.account.AccountController","starter.account.AccountController.constructor","starter.account.AccountController.GetAllLeague","starter.account.AccountController.updateDisplayLeague","starter.account.AccountController.checkIonicUserData","starter.account.AccountController.createIonicUserData","starter.account.AccountController.SkipLogin","starter.account.AccountController.LoginWithFacebook","starter.account.AccountController.SelectFavoriteTeam","starter.account.AccountController.SetFavoriteTeam","starter.account.AccountInformation","starter.account.AccountInformation.constructor","starter.account.CreateNewGuestRespond","starter.account.CreateNewGuestRespond.constructor","starter.account.LeagueInformation","starter.account.LeagueInformation.constructor","starter.account.GetAllLeagueRespond","starter.account.GetAllLeagueRespond.constructor","starter.account.SetFavoriteTeamRequest","starter.account.SetFavoriteTeamRequest.constructor","starter.account.AccountServices","starter.account.AccountServices.constructor","starter.account.AccountServices.CreateNewGuest","starter.account.AccountServices.GetAllLeague","starter.account.AccountServices.SetFavoriteTeam","starter.history","starter.history.HistoryController","starter.history.HistoryController.constructor","starter.history.HistoryController.GetHistories","starter.history.HistoryController.GetHistoriesByMonth","starter.history.HistoryController.GetMonthString","starter.history.HistoryController.toggleGroup","starter.history.HistoryController.isGroupShown","starter.history.MatchInformation","starter.history.MatchInformation.constructor","starter.history.TeamInformation","starter.history.TeamInformation.constructor","starter.history.GetAllGuessHistoryRequest","starter.history.GetAllGuessHistoryRequest.constructor","starter.history.GetAllGuessHistoryRespond","starter.history.GetAllGuessHistoryRespond.constructor","starter.history.GuessHistoryMonthlyInformation","starter.history.GuessHistoryMonthlyInformation.constructor","starter.history.GetGuessHistoryByMonthRequest","starter.history.GetGuessHistoryByMonthRequest.constructor","starter.history.GetGuessHistoryByMonthRespond","starter.history.GetGuessHistoryByMonthRespond.constructor","starter.history.GuessHistoryDailyInformation","starter.history.GuessHistoryDailyInformation.constructor","starter.history.HistoryServices","starter.history.HistoryServices.constructor","starter.history.HistoryServices.GetAllGuessHistory","starter.history.HistoryServices.GetGuessHistoryByMonth","starter.match","starter.match.MatchController","starter.match.MatchController.constructor","starter.match.MatchController.LoginWithFacebook","starter.match.MatchController.GetTodayMatches","starter.match.MatchController.Logout","starter.match.MatchController.SelectTeam","starter.match.MatchController.SelectDay","starter.match.MatchController.IsTodayMatch","starter.match.MatchController.dateAreEqual","starter.match.MatchController.updateDisplayMatches","starter.match.MatchController.updateDisplayDate","starter.match.MatchController.updateRemainingGuessAmount","starter.match.MatchController.getSelectedTodayMatches","starter.match.MatchInformation","starter.match.MatchInformation.constructor","starter.match.TeamInformation","starter.match.TeamInformation.constructor","starter.match.GetMatchesRequest","starter.match.GetMatchesRequest.constructor","starter.match.GetMatchesRespond","starter.match.GetMatchesRespond.constructor","starter.match.GuessMatchRequest","starter.match.GuessMatchRequest.constructor","starter.match.GuessMatchRespond","starter.match.GuessMatchRespond.constructor","starter.match.MatchServices","starter.match.MatchServices.constructor","starter.match.MatchServices.GetMatches","starter.match.MatchServices.GuessMatch","starter.reward","starter.reward.GetCurrentRewardsRespond","starter.reward.GetCurrentRewardsRespond.constructor","starter.reward.RewardInformation","starter.reward.RewardInformation.constructor","starter.reward.RewardController","starter.reward.RewardController.constructor","starter.reward.RewardController.GetRewards","starter.reward.RewardServices","starter.reward.RewardServices.constructor","starter.reward.RewardServices.GetCurrentRewards","starter.shared","starter.shared.QueryRemoteDataService","starter.shared.QueryRemoteDataService.constructor","starter.shared.QueryRemoteDataService.RemoteQuery"],"mappings":"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","sourcesContent":["// Ionic Starter App\r\ndeclare var Ionic: any;\r\n// angular.module is a global place for creating, registering and retrieving Angular modules\r\n// 'starter' is the name of this angular module example (also set in a <body> attribute in index.html)\r\n// the 2nd parameter is an array of 'requires'\r\n// 'starter.controllers' is found in controllers.js\r\nangular.module('starter', ['ionic', 'ionic.service.core', 'starter.controllers', 'azure-mobile-service.module', 'starter.shared', 'starter.account', 'starter.match', 'starter.reward', 'starter.history', 'bhResponsiveImages'])\r\n    .constant('AzureMobileServiceClient', {\r\n        API_URL: 'https://dailysoccer.azurewebsites.net'\r\n    })\r\n    .run(function ($ionicPlatform) {\r\n        $ionicPlatform.ready(function () {\r\n            // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard\r\n            // for form inputs)\r\n            if (window.cordova && window.cordova.plugins.Keyboard) {\r\n                cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);\r\n                cordova.plugins.Keyboard.disableScroll(true);\r\n            }\r\n            if (window.StatusBar) {\r\n                // org.apache.cordova.statusbar required\r\n                window.StatusBar.styleDefault();\r\n            }  \r\n          \r\n            // kick off the platform web client\r\n            Ionic.io();\r\n            \r\n        });\r\n    })\r\n    .config(function ($stateProvider, $urlRouterProvider) {\r\n        $stateProvider\r\n\r\n            .state('app', {\r\n                url: '/app',\r\n                abstract: true,\r\n                templateUrl: 'templates/menu.html',\r\n                controller: 'AppCtrl'\r\n            })\r\n            .state('app.search', {\r\n                url: '/search',\r\n                views: {\r\n                    'menuContent': {\r\n                        templateUrl: 'templates/search.html'\r\n                    }\r\n                }\r\n            })\r\n            .state('app.browse', {\r\n                url: '/browse',\r\n                views: {\r\n                    'menuContent': {\r\n                        templateUrl: 'templates/browse.html'\r\n                    }\r\n                }\r\n            })\r\n            .state('app.playlists', {\r\n                url: '/playlists',\r\n                views: {\r\n                    'menuContent': {\r\n                        templateUrl: 'templates/playlists.html',\r\n                        controller: 'PlaylistsCtrl'\r\n                    }\r\n                }\r\n            })\r\n            .state('app.single', {\r\n                url: '/playlists/:playlistId',\r\n                views: {\r\n                    'menuContent': {\r\n                        templateUrl: 'templates/playlist.html',\r\n                        controller: 'PlaylistCtrl'\r\n                    }\r\n                }\r\n            })\r\n\r\n            .state('account', {\r\n                url: '/account',\r\n                abstract: true,\r\n                cache: false,\r\n                templateUrl: 'templates/_fullpageTemplate.html',\r\n                controller: 'starter.account.AccountController as accountCtrl'\r\n            })\r\n            .state('account.login', {\r\n                url: '/login',\r\n                views: {\r\n                    'MainContent': {\r\n                        templateUrl: 'templates/Accounts/Login.html',\r\n                    }\r\n                }\r\n            })\r\n            .state('account.favorite', {\r\n                url: '/favorite',\r\n                views: {\r\n                    'MainContent': {\r\n                        templateUrl: 'templates/Accounts/Favorite.html',\r\n                    }\r\n                }\r\n            })\r\n\r\n            .state('matches', {\r\n                url: '/matches',\r\n                abstract: true,\r\n                cache: false,\r\n                templateUrl: 'templates/_matchTemplate.html',\r\n                controller: 'starter.match.MatchController as matchCtrl'\r\n            })\r\n            .state('matches.todaymatches', {\r\n                url: '/todaymatches',\r\n                views: {\r\n                    'MainContent': {\r\n                        templateUrl: 'templates/Matches/TodayMatches.html',\r\n                        //controller: 'PlaylistsCtrl'\r\n                    }\r\n                }\r\n            })\r\n\r\n            .state('rewards', {\r\n                url: '/rewards',\r\n                abstract: true,\r\n                templateUrl: 'templates/_rewardTemplate.html',\r\n                controller: 'starter.reward.RewardController as rewardCtrl'\r\n            })\r\n            .state('rewards.rewards', {\r\n                url: '/rewards',\r\n                views: {\r\n                    'tab-rewards': {\r\n                        templateUrl: 'templates/Rewards/Rewards.html',\r\n                        //controller: 'PlaylistsCtrl'\r\n                    }\r\n                }\r\n            })\r\n            .state('rewards.myrewards', {\r\n                url: '/myrewards',\r\n                views: {\r\n                    'tab-myrewards': {\r\n                        templateUrl: 'templates/Rewards/MyRewards.html',\r\n                    }\r\n                }\r\n            })\r\n            .state('rewards.rewardwinner', {\r\n                url: '/rewardwinner',\r\n                views: {\r\n                    'tab-rewardwinner': {\r\n                        templateUrl: 'templates/Rewards/RewardWinner.html',\r\n                    }\r\n                }\r\n            })\r\n\r\n\r\n\r\n            .state('history', {\r\n                url: '/history',\r\n                abstract: true,\r\n                templateUrl: 'templates/_basicTemplate.html',\r\n                controller: 'starter.history.HistoryController as historyCtrl'\r\n            })\r\n            .state('history.historybymonth', {\r\n                url: '/historybymonth',\r\n                views: {\r\n                    'MainContent': {\r\n                        templateUrl: 'templates/Matches/HistoryByMonth.html',\r\n                    }\r\n                }\r\n            })\r\n            .state('history.historybyday', {\r\n                url: '/historybyday',\r\n                views: {\r\n                    'MainContent': {\r\n                        templateUrl: 'templates/Matches/HistoryByDay.html',\r\n                    }\r\n                }\r\n            })\r\n\r\n            .state('ticket', {\r\n                url: '/ticket',\r\n                abstract: true,\r\n                templateUrl: 'templates/_basicTemplate.html',\r\n                //controller: 'AppCtrl'\r\n            })\r\n            .state('ticket.buyticket', {\r\n                url: '/buyticket',\r\n                views: {\r\n                    'MainContent': {\r\n                        templateUrl: 'templates/Rewards/BuyTicket.html',\r\n                    }\r\n                }\r\n            })\r\n            .state('buyticketcompleted', {\r\n                url: '/buyticketcompleted',\r\n                abstract: true,\r\n                templateUrl: 'templates/_fullpageTemplate.html',\r\n                //controller: 'AppCtrl'\r\n            })\r\n            .state('buyticketcompleted.buyticketcompleted', {\r\n                url: '/buyticketcompleted',\r\n                views: {\r\n                    'MainContent': {\r\n                        templateUrl: 'templates/Rewards/BuyTicketCompleted.html',\r\n                    }\r\n                }\r\n            })\r\n\r\n            .state('verify', {\r\n                url: '/verify',\r\n                abstract: true,\r\n                templateUrl: 'templates/_basicTemplate.html',\r\n                //controller: 'AppCtrl'\r\n            })\r\n            .state('verify.verifyphonenumber', {\r\n                url: '/verifyphonenumber',\r\n                views: {\r\n                    'MainContent': {\r\n                        templateUrl: 'templates/Accounts/VerifyPhoneNumber.html',\r\n                    }\r\n                }\r\n            })\r\n            .state('verify.verifycode', {\r\n                url: '/verifycode',\r\n                views: {\r\n                    'MainContent': {\r\n                        templateUrl: 'templates/Accounts/VerifyCode.html',\r\n                    }\r\n                }\r\n            })\r\n            .state('underconstruction', {\r\n                url: '/underconstruction',\r\n                abstract: true,\r\n                templateUrl: 'templates/_basicTemplate.html'\r\n            })\r\n            .state('underconstruction.underconstruction', {\r\n                url: '/underconstruction',\r\n                views: {\r\n                    'MainContent': {\r\n                        templateUrl: 'templates/UnderConstruction.html',\r\n                    }\r\n                }\r\n            })\r\n\r\n            .state('syncdata', {\r\n                url: '/syncdata',\r\n                abstract: true,\r\n                templateUrl: 'templates/_fullpageTemplate.html',\r\n                //controller: 'AppCtrl'\r\n            })\r\n            .state('syncdata.syncdata', {\r\n                url: '/syncdata',\r\n                views: {\r\n                    'MainContent': {\r\n                        templateUrl: 'templates/Accounts/SyncData.html',\r\n                    }\r\n                }\r\n            })\r\n\r\n        ;\r\n\r\n\r\n        // if none of the above states are matched, use this as the fallback\r\n        //$urlRouterProvider.otherwise('/app/playlists');\r\n        $urlRouterProvider.otherwise('/account/login');\r\n    });\r\n","angular.module('starter.controllers', [])\r\n\r\n    .controller('AppCtrl', function ($scope, $ionicModal, $timeout) {\r\n        $scope.groups = [];\r\n        for (var i = 0; i < 2; i++) {\r\n            $scope.groups[i] = {\r\n                name: i,\r\n                items: []\r\n            };\r\n        }\r\n\r\n        $scope.toggleGroup = function (group) {\r\n            if ($scope.isGroupShown(group)) {\r\n                $scope.shownGroup = null;\r\n            } else {\r\n                $scope.shownGroup = group;\r\n            }\r\n        };\r\n        $scope.isGroupShown = function (group) {\r\n            return $scope.shownGroup === group;\r\n        };\r\n  \r\n  // With the new view caching in Ionic, Controllers are only called\r\n  // when they are recreated or on app start, instead of every page change.\r\n  // To listen for when this page is active (for example, to refresh data),\r\n  // listen for the $ionicView.enter event:\r\n  //$scope.$on('$ionicView.enter', function(e) {\r\n  //});\r\n\r\n  // Form data for the login modal\r\n  $scope.loginData = {};\r\n\r\n  // Create the login modal that we will use later\r\n  $ionicModal.fromTemplateUrl('templates/login.html', {\r\n    scope: $scope\r\n  }).then(function(modal) {\r\n    $scope.modal = modal;\r\n  });\r\n\r\n  // Triggered in the login modal to close it\r\n  $scope.closeLogin = function() {\r\n    $scope.modal.hide();\r\n  };\r\n\r\n  // Open the login modal\r\n  $scope.login = function () {\r\n    $scope.modal.show();\r\n  };\r\n\r\n  // Perform the login action when the user submits the login form\r\n  $scope.doLogin = function() {\r\n    console.log('Doing login', $scope.loginData);\r\n\r\n    // Simulate a login delay. Remove this and replace with your login\r\n    // code if using a login system\r\n    $timeout(function() {\r\n      $scope.closeLogin();\r\n    }, 1000);\r\n  };\r\n})\r\n\r\n.controller('PlaylistsCtrl', function ($scope, Azureservice) {\r\n\r\n    //var user = Ionic.User.current();\r\n    //alert(user.get('name'));\r\n\r\n    //Azureservice.invokeApi('Account/CreateNewGuess', {\r\n    //        method: 'get'\r\n    //})\r\n    //.then(function (response) {\r\n    //    console.log('Here is my response object');\r\n    //    alert(response.userId)\r\n    //}, function (err) {\r\n    //    console.error('Azure Error: ' + err);\r\n    //});\r\n\r\n  $scope.playlists = [\r\n    { title: 'Reggae', id: 1 },\r\n    { title: 'Chill', id: 2 },\r\n    { title: 'Dubstep', id: 3 },\r\n    { title: 'Indie', id: 4 },\r\n    { title: 'Rap', id: 5 },\r\n    { title: 'Cowbell', id: 6 }\r\n  ];\r\n})\r\n\r\n.controller('PlaylistCtrl', function($scope, $stateParams) {\r\n});\r\n","module starter.account {\r\n    'use strict';\r\n\r\n    class AccountController {\r\n\r\n        public isHideSkipButton: Boolean;\r\n        public DisplayLeague: LeagueInformation[];\r\n        private _allLeague: LeagueInformation[];\r\n        private _selectedTeamId: number = -1;\r\n\r\n        static $inject = ['$scope', '$timeout', '$location', 'starter.account.AccountServices'];\r\n        constructor(private $scope, private $timeout: ng.ITimeoutService, private $location: ng.ILocationService, private accountSvc: starter.account.AccountServices){\r\n            //this.checkIonicUserData();\r\n            this.GetAllLeague();\r\n        }\r\n\r\n        private GetAllLeague(): void {\r\n            this.accountSvc.GetAllLeague()\r\n                .then((respond: GetAllLeagueRespond): void => {\r\n                    this.updateDisplayLeague(respond.Leagues);\r\n                    console.log('Get all league completed.');\r\n                });\r\n        }\r\n\r\n        private updateDisplayLeague(leagues: LeagueInformation[]): void {\r\n            this._allLeague = leagues;\r\n            //Hack: Not fliter yet\r\n            this.DisplayLeague = this._allLeague;\r\n            console.log('# Update league completed.');\r\n        }\r\n\r\n        private checkIonicUserData() {\r\n            var user = Ionic.User.current();\r\n            if (user.id && user.id != 'empty') {\r\n                this.$location.path('/matches/todaymatches');\r\n            } else {\r\n                var isSkiped = user.get('isSkiped');\r\n                if (isSkiped) {\r\n                    this.isHideSkipButton = true;\r\n                } \r\n            }\r\n        }\r\n\r\n        private createIonicUserData() {\r\n            var user = Ionic.User.current();\r\n                this.accountSvc.CreateNewGuest()\r\n                    .then((respond: CreateNewGuestRespond): void => {\r\n                        user.id = respond.AccountInfo.SecrectCode;\r\n                        user.set('isSkiped', 'true');\r\n                        user.save();\r\n                        console.log('Create new guest complete.');\r\n                        \r\n                        this.$location.path('/account/favorite');\r\n                    });\r\n        }\r\n\r\n        public SkipLogin(): void {\r\n            // TODO: Login with guest\r\n            this.createIonicUserData();           \r\n        };\r\n\r\n        public LoginWithFacebook(): void {\r\n            // TODO: Login with facebook\r\n            this.createIonicUserData();\r\n        };\r\n\r\n        public SelectFavoriteTeam(TeamId: number) {\r\n            this._selectedTeamId = TeamId;\r\n            console.log('Set favorite team completed.');\r\n        }\r\n\r\n        public SetFavoriteTeam() {\r\n            var user = Ionic.User.current();\r\n            if (this._selectedTeamId > -1) {\r\n                var favoriteTeam = new SetFavoriteTeamRequest();\r\n                favoriteTeam.UserId = user.id;\r\n                favoriteTeam.SelectedTeamId = this._selectedTeamId;\r\n                this.accountSvc.SetFavoriteTeam(favoriteTeam);\r\n                console.log('Send favorite team completed.');\r\n            }\r\n            else {\r\n                console.log('Skip to send favorite team completed.');\r\n            }\r\n            this.$location.path('/matches/todaymatches');\r\n            user.set('isSetFavoriteTeam', 'true');\r\n            user.save();\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('starter.account', [])\r\n        .controller('starter.account.AccountController', AccountController);\r\n}","module starter.account {\r\n\r\n    export interface IAccountService {\r\n        CreateNewGuest(): ng.IPromise<CreateNewGuestRespond>;\r\n    }\r\n\r\n    export class AccountInformation {\r\n        public SecrectCode: string;\r\n        public Points: number;\r\n        public MaximumGuessAmount: number;\r\n        public CurrentOrderedCoupon: number;\r\n    }\r\n\r\n    export class CreateNewGuestRespond {\r\n        public AccountInfo: AccountInformation;\r\n        public IsSuccessed: Boolean;\r\n    }\r\n\r\n    export class LeagueInformation {\r\n        public LeagueName: string;\r\n        public TeamName: string;\r\n        public TeamId: number;\r\n    }\r\n\r\n    export class GetAllLeagueRespond {\r\n        public Leagues: LeagueInformation[];\r\n    }\r\n\r\n    export class SetFavoriteTeamRequest {\r\n        public UserId: string;\r\n        public SelectedTeamId: number;\r\n    }\r\n\r\n}","module starter.account {\r\n    'use strict';\r\n\r\n    export class AccountServices implements IAccountService {\r\n\r\n        static $inject = ['starter.shared.QueryRemoteDataService'];\r\n        constructor(private queryRemoteSvc: starter.shared.QueryRemoteDataService) {\r\n        }\r\n\r\n        public CreateNewGuest(): ng.IPromise<CreateNewGuestRespond> {\r\n            var requestUrl = \"Account/CreateNewGuest\";\r\n            return this.queryRemoteSvc.RemoteQuery<CreateNewGuestRespond>(requestUrl);\r\n        }\r\n\r\n        public GetAllLeague(): ng.IPromise<GetAllLeagueRespond> {\r\n            var requestUrl = \"Favorite/GetAllLeagues\";\r\n            return this.queryRemoteSvc.RemoteQuery<GetAllLeagueRespond>(requestUrl);\r\n        }\r\n\r\n        public SetFavoriteTeam(req: SetFavoriteTeamRequest): void {\r\n            var requestUrl = \"Favorite/SetFavoriteTeam?userId=\" + req.UserId + \"&selectedTeamId=\" + req.SelectedTeamId;\r\n            this.queryRemoteSvc.RemoteQuery<SetFavoriteTeamRequest>(requestUrl);\r\n        }\r\n\r\n    }\r\n    angular\r\n        .module('starter.account')\r\n        .service('starter.account.AccountServices', AccountServices);\r\n}","module starter.history {\r\n    'use strict';\r\n\r\n    class HistoryController {\r\n        \r\n        public HistoryInfo: history.GetAllGuessHistoryRespond;\r\n        public HistoryByMonthInfo: history.GetGuessHistoryByMonthRespond;\r\n        public shownGroup: GuessHistoryDailyInformation[];\r\n        public Year: number = 2015;\r\n\r\n\r\n        static $inject = ['$scope', 'starter.history.HistoryServices'];\r\n        constructor(private $scope,\r\n            private historySvc: starter.history.HistoryServices) {\r\n            this.GetHistories();\r\n        }\r\n\r\n        public GetHistories(): void {\r\n            var user = Ionic.User.current();\r\n            var data = new GetAllGuessHistoryRequest();\r\n            data.UserId = user.id;\r\n            this.historySvc.GetAllGuessHistory(data)\r\n                .then((respond: GetAllGuessHistoryRespond): void => {\r\n                    this.HistoryInfo = respond;\r\n                    console.log('Get all history completed.');\r\n                });\r\n        }\r\n\r\n        public GetHistoriesByMonth(month: number): void {\r\n            var user = Ionic.User.current();\r\n            var data = new GetGuessHistoryByMonthRequest();\r\n            data.UserId = user.id;\r\n            data.Year = this.Year;\r\n            data.Month = month;\r\n            this.historySvc.GetGuessHistoryByMonth(data)\r\n                .then((respond: GetGuessHistoryByMonthRespond): void => {\r\n                    this.HistoryByMonthInfo = respond;\r\n                    console.log('Get all history by month completed.');\r\n                    console.log(month);\r\n                });\r\n        }\r\n\r\n        public GetMonthString(month: number): Date {\r\n            var monthString = new Date(this.Year, month);\r\n            return monthString;\r\n        }\r\n\r\n        public toggleGroup(group: GuessHistoryDailyInformation[]): void {\r\n            if (this.isGroupShown(group)) {\r\n                this.shownGroup = null;\r\n            } else {\r\n                this.shownGroup = group;\r\n            }\r\n        };\r\n\r\n\r\n        public isGroupShown(group: GuessHistoryDailyInformation[]): boolean {\r\n            console.log(this.shownGroup == group);\r\n            return this.shownGroup == group;\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('starter.history', [])\r\n        .controller('starter.history.HistoryController', HistoryController);\r\n}","module starter.history {\r\n\r\n    export class MatchInformation {\r\n        public Id: number;\r\n        public BeginDate: Date;\r\n        public LeagueName: string;\r\n        public StartedDate: Date;\r\n        public CompletedDate: Date;\r\n        public Status: string;\r\n        public TeamHome: TeamInformation;\r\n        public TeamAway: TeamInformation;\r\n    }\r\n\r\n    export class TeamInformation {\r\n        public Id: number;\r\n        public Name: string;\r\n        public CurrentScore: number;\r\n        public CurrentPredictionPoints: number;\r\n        public IsSelected: boolean;\r\n        public WinningPredictionPoints: number;\r\n    }\r\n\r\n    export interface IHistoryService {\r\n        GetAllGuessHistory(req: GetAllGuessHistoryRequest): ng.IPromise<GetAllGuessHistoryRespond>;\r\n        GetGuessHistoryByMonth(req: GetGuessHistoryByMonthRequest): ng.IPromise<GetGuessHistoryByMonthRespond>;\r\n    }\r\n\r\n    export class GetAllGuessHistoryRequest {\r\n         public UserId: string;\r\n    }\r\n\r\n    export class GetAllGuessHistoryRespond {\r\n         public Histories: GuessHistoryMonthlyInformation[];\r\n    }\r\n\r\n    export class GuessHistoryMonthlyInformation {\r\n         public Month: number;\r\n         public TotalPoints: number;\r\n    }\r\n\r\n    export class GetGuessHistoryByMonthRequest {\r\n        public UserId: string;\r\n        public Year: number;\r\n        public Month: number;\r\n    }\r\n\r\n    export class GetGuessHistoryByMonthRespond {\r\n         public Histories: GuessHistoryDailyInformation[];\r\n    }\r\n\r\n    export class GuessHistoryDailyInformation {\r\n         public Day: Date;\r\n         public TotalPoints: number;\r\n         public Matches: MatchInformation[];\r\n    }\r\n}","module starter.history {\r\n    'use strict';\r\n\r\n    export class HistoryServices implements IHistoryService {\r\n        static $inject = ['starter.shared.QueryRemoteDataService'];\r\n        constructor(private queryRemoteSvc: starter.shared.QueryRemoteDataService) {\r\n        }\r\n\r\n        public GetAllGuessHistory(req: GetAllGuessHistoryRequest): ng.IPromise<GetAllGuessHistoryRespond> {\r\n            var requestUrl = 'History/GetAllGuessHistory?UserId=' + req.UserId;\r\n            return this.queryRemoteSvc.RemoteQuery<GetAllGuessHistoryRespond>(requestUrl);\r\n        }\r\n\r\n        public GetGuessHistoryByMonth(req: GetGuessHistoryByMonthRequest): ng.IPromise<GetGuessHistoryByMonthRespond> {\r\n            var requestUrl = 'History/GetGuessHistoryByMonth?UserId=' + req.UserId + '&year=' + req.Year + '&month=' + req.Month;\r\n            return this.queryRemoteSvc.RemoteQuery<GetGuessHistoryByMonthRespond>(requestUrl);\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('starter.history')\r\n        .service('starter.history.HistoryServices', HistoryServices);\r\n}","module starter.match {\r\n    'use strict';\r\n\r\n    class MatchController {\r\n\r\n        public CurrentDate: Date;\r\n        public PastOneDaysDate: Date = new Date();\r\n        public PastTwoDaysDate: Date = new Date();\r\n        public FutureOneDaysDate: Date = new Date();\r\n        public FutureTwoDaysDate: Date = new Date();\r\n        public RemainingGuessAmount: number;\r\n        public DisplayMatches: MatchInformation[] = [];\r\n        public AccountInfo: account.AccountInformation;\r\n        private _allMatches: MatchInformation[] = [];\r\n\r\n        static $inject = ['$scope', 'starter.match.MatchServices', '$location', '$ionicModal', '$ionicTabsDelegate'];\r\n        constructor(private $scope,\r\n            private matchSvc: starter.match.MatchServices,\r\n            private $location: ng.ILocationService,\r\n            private $ionicModal,\r\n            private $ionicTabsDelegate) {\r\n        \r\n            this.GetTodayMatches();\r\n            this.$ionicModal.fromTemplateUrl('templates/Matches/MatchPopup.html',\r\n                {\r\n                    scope: $scope,\r\n                    animation: 'slide-in-up'\r\n                }).then(function (modal): void { $scope.MatchPopup = modal; });\r\n\r\n            this.$ionicModal.fromTemplateUrl('templates/Accounts/TieFacebookPopup.html',\r\n                {\r\n                    scope: $scope,\r\n                    animation: 'slide-in-up'\r\n                }).then(function (modal): void { $scope.TieFacebookPopup = modal; });\r\n        }\r\n\r\n        public LoginWithFacebook(): void {\r\n            this.$scope.TieFacebookPopup.show();\r\n        }\r\n\r\n        public GetTodayMatches(): void {\r\n            var user = Ionic.User.current();\r\n            var data = new GetMatchesRequest();\r\n            data.UserId = user.id;\r\n            this.matchSvc.GetMatches(data)\r\n                .then((respond: GetMatchesRespond): void => {\r\n                    this.AccountInfo = respond.AccountInfo;\r\n                    this.updateDisplayDate(respond.CurrentDate);\r\n                    this.updateDisplayMatches(respond.Matches);\r\n                    this.updateRemainingGuessAmount();\r\n                    this.$ionicTabsDelegate.$getByHandle('calendarTabs').select(2);\r\n                    console.log('Get all matches completed.');\r\n                });\r\n        }\r\n\r\n        public Logout(): void {\r\n            var user = Ionic.User.current();\r\n            user.id = 'empty';\r\n            user.save();\r\n            this.$location.path('/account/login');\r\n        }\r\n\r\n        public SelectTeam(selectedMatch: MatchInformation, selectedTeamId: number) {\r\n            var isChangingValid = this.AccountInfo.MaximumGuessAmount > this.getSelectedTodayMatches().length\r\n            if (!isChangingValid) {\r\n                if (selectedMatch.TeamHome.IsSelected != !selectedMatch.TeamAway.IsSelected) {\r\n                    this.$scope.MatchPopup.show();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            var isSelectedTeamHome = selectedMatch.TeamHome.Id == selectedTeamId;\r\n            var selectedTeam = isSelectedTeamHome ? selectedMatch.TeamHome : selectedMatch.TeamAway;\r\n            var unselectedTeam = !isSelectedTeamHome ? selectedMatch.TeamHome : selectedMatch.TeamAway;\r\n            var beforeChange = selectedTeam.IsSelected;\r\n            selectedTeam.IsSelected = !selectedTeam.IsSelected;\r\n            unselectedTeam.IsSelected = false;\r\n\r\n            var request = new GuessMatchRequest();\r\n            request.UserId = Ionic.User.current().id;\r\n            request.MatchId = selectedMatch.Id;\r\n            request.IsHome = isSelectedTeamHome;\r\n            request.IsCancel = ((selectedTeamId == selectedTeam.Id) && (beforeChange)) ? true : false;\r\n\r\n            this.matchSvc.GuessMatch(request)\r\n                .then((respond: GuessMatchRespond): void => {\r\n                    this.AccountInfo = respond.AccountInfo;\r\n                    this.updateDisplayMatches(respond.Matches);\r\n                    this.updateRemainingGuessAmount();\r\n                    console.log('Send guess match completed.');\r\n                });\r\n\r\n            this.updateRemainingGuessAmount();\r\n        }\r\n\r\n        public SelectDay(days: Date) {\r\n            this.DisplayMatches = this._allMatches.filter(it=> this.dateAreEqual(it.BeginDate, days));\r\n            console.log('# Change display matches completed.');\r\n        }\r\n\r\n        public IsTodayMatch(match: MatchInformation): boolean {\r\n            return this.dateAreEqual(match.BeginDate, this.CurrentDate);\r\n        }\r\n\r\n        private dateAreEqual(firstDate: Date, secondDate: Date): boolean {\r\n            var first = new Date(firstDate.toString());\r\n            var second = new Date(secondDate.toString());\r\n            return first.getDay() == second.getDay();\r\n        }\r\n\r\n        private updateDisplayMatches(matches: MatchInformation[]): void {\r\n            this._allMatches = matches;\r\n            this.SelectDay(this.CurrentDate);\r\n            console.log('# Update matches completed.');\r\n        }\r\n        \r\n        private updateDisplayDate(currentDate: Date): void {\r\n            this.CurrentDate = currentDate;\r\n\r\n            currentDate = new Date(currentDate.toString());\r\n            this.PastOneDaysDate.setDate(currentDate.getDate() - 1);\r\n            this.PastTwoDaysDate.setDate(currentDate.getDate() - 2);\r\n            this.FutureOneDaysDate.setDate(currentDate.getDate() + 1);\r\n            this.FutureTwoDaysDate.setDate(currentDate.getDate() + 2);\r\n            console.log('# Update date completed.');\r\n        }\r\n\r\n        private updateRemainingGuessAmount(): void {\r\n            this.RemainingGuessAmount = this.AccountInfo.MaximumGuessAmount - this.getSelectedTodayMatches().length;\r\n            console.log('# Update remaining guess amount completed.');\r\n        }\r\n\r\n        private getSelectedTodayMatches(): MatchInformation[] {\r\n            var selectedMatchesQry = this._allMatches.filter(it=> (it.TeamHome.IsSelected || it.TeamAway.IsSelected) && this.dateAreEqual(it.BeginDate, this.CurrentDate));\r\n            return selectedMatchesQry;\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('starter.match', [])\r\n        .controller('starter.match.MatchController', MatchController);\r\n}","module starter.match {\r\n\r\n    export class MatchInformation {\r\n        public Id: number;\r\n        public BeginDate: Date;\r\n        public LeagueName: string;\r\n        public StartedDate: Date;\r\n        public CompletedDate: Date;\r\n        public Status: string;\r\n        public TeamHome: TeamInformation;\r\n        public TeamAway: TeamInformation;\r\n    }\r\n\r\n    export class TeamInformation {\r\n        public Id: number;\r\n        public Name: string;\r\n        public CurrentScore: number;\r\n        public CurrentPredictionPoints: number;\r\n        public IsSelected: boolean;\r\n        public WinningPredictionPoints: number;\r\n    }\r\n\r\n    export interface IMatchService {\r\n        GetMatches(req: GetMatchesRequest): ng.IPromise<GetMatchesRespond>;\r\n        GuessMatch(req: GuessMatchRequest): ng.IPromise<GuessMatchRespond>;\r\n    }\r\n    export class GetMatchesRequest {\r\n        public UserId: string;\r\n    }\r\n    export class GetMatchesRespond {\r\n        public CurrentDate: Date;\r\n        public AccountInfo: account.AccountInformation;\r\n        public Matches: MatchInformation[];\r\n    }\r\n    export class GuessMatchRequest {\r\n        public UserId: string;\r\n        public MatchId: number;\r\n        public IsHome: boolean;\r\n        public IsCancel: boolean;\r\n    }\r\n    export class GuessMatchRespond {\r\n        public AccountInfo: account.AccountInformation;\r\n        public Matches: MatchInformation[];\r\n        public IsSuccessed: boolean;\r\n    }\r\n\r\n}","module starter.match {\r\n    'use strict';\r\n\r\n    export class MatchServices implements IMatchService {\r\n\r\n        static $inject = ['starter.shared.QueryRemoteDataService'];\r\n        constructor(private queryRemoteSvc: starter.shared.QueryRemoteDataService) {\r\n        }\r\n\r\n        public GetMatches(req: GetMatchesRequest): ng.IPromise<GetMatchesRespond> {\r\n            var requestUrl = 'Matches/GetMatches?UserId=' + req.UserId;\r\n            return this.queryRemoteSvc.RemoteQuery<GetMatchesRespond>(requestUrl);\r\n        }\r\n\r\n        public GuessMatch(req: GuessMatchRequest): ng.IPromise<GuessMatchRespond> {\r\n            var requestUrl = 'Matches/GuessMatch?userId=' + req.UserId + '&matchId=' + req.MatchId + '&isHome=' + req.IsHome + '&isCancel=' + req.IsCancel;\r\n            return this.queryRemoteSvc.RemoteQuery<GuessMatchRespond>(requestUrl);\r\n        }\r\n\r\n    }\r\n\r\n    angular\r\n        .module('starter.match')\r\n        .service('starter.match.MatchServices', MatchServices);\r\n}","module starter.reward {\r\n\r\n    export interface IRewardService {\r\n        GetCurrentRewards(): ng.IPromise<GetCurrentRewardsRespond>;\r\n    }\r\n\r\n    export class GetCurrentRewardsRespond {\r\n        public TicketCost: number;\r\n        public Rewards: RewardInformation[];\r\n    }\r\n\r\n    export class RewardInformation {\r\n        public ImagePath: string;\r\n        public RemainingAmount: number;\r\n    }\r\n}","module starter.reward {\r\n    'use strict';\r\n\r\n    class RewardController {\r\n\r\n        public CurrentOrderedCoupon: number = 2940;\r\n        public UserCoupon: number = 0;\r\n        public RewardInfo: reward.GetCurrentRewardsRespond;\r\n\r\n        \r\n        static $inject = ['$scope', 'starter.reward.RewardServices'];\r\n        constructor(private $scope,\r\n            private rewardSvc: starter.reward.RewardServices) {\r\n            this.GetRewards();\r\n        }\r\n\r\n        public GetRewards(): void {\r\n            this.rewardSvc.GetCurrentRewards()\r\n                .then((respond: GetCurrentRewardsRespond): void => {\r\n                    this.RewardInfo = respond;\r\n                    console.log('Get all rewards completed.');\r\n                });\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('starter.reward', [])\r\n        .controller('starter.reward.RewardController', RewardController);\r\n}","module starter.reward {\r\n    'use strict';\r\n\r\n    export class RewardServices implements IRewardService {\r\n        static $inject = ['starter.shared.QueryRemoteDataService'];\r\n        constructor(private queryRemoteSvc: starter.shared.QueryRemoteDataService) {\r\n        }\r\n\r\n        public GetCurrentRewards(): ng.IPromise<GetCurrentRewardsRespond> {\r\n            var requestUrl = 'Reward/GetCurrentRewards';\r\n            return this.queryRemoteSvc.RemoteQuery<GetCurrentRewardsRespond>(requestUrl);\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('starter.reward')\r\n        .service('starter.reward.RewardServices', RewardServices);\r\n}\r\n","((): void => {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('starter.shared', [])\r\n})();","module starter.shared {\r\n    'use strict';\r\n\r\n    export interface IQueryRemoteDataService {\r\n        RemoteQuery<TRespond>(baseUrl: string): ng.IPromise<TRespond>;\r\n    }\r\n\r\n    export class QueryRemoteDataService implements IQueryRemoteDataService {\r\n        private serviceURL = 'http://localhost:3728/api/'\r\n        static $inject = ['$http'];\r\n        constructor(protected $http: ng.IHttpService) { }\r\n\r\n        public RemoteQuery<TRespond>(baseUrl: string): ng.IPromise<TRespond> {\r\n            return this.$http({ method: 'GET', url: this.serviceURL + baseUrl })\r\n                .then((respond: ng.IHttpPromiseCallbackArg<TRespond>): TRespond => respond.data);\r\n        }\r\n    }\r\n\r\n\r\n    angular\r\n        .module('starter.shared')\r\n        .service('starter.shared.QueryRemoteDataService', QueryRemoteDataService);\r\n}"]}